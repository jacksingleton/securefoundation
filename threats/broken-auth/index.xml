<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Broken Auth on Secure Foundation</title>
    <link>https://jacksingleton.github.io/securefoundation/threats/broken-auth/index.xml</link>
    <description>Recent content in Broken Auth on Secure Foundation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://jacksingleton.github.io/securefoundation/threats/broken-auth/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom Auth Logic</title>
      <link>https://jacksingleton.github.io/securefoundation/spring/custom-auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacksingleton.github.io/securefoundation/spring/custom-auth/</guid>
      <description>

&lt;h2 id=&#34;bad-practice&#34;&gt;Bad Practice&lt;/h2&gt;

&lt;p&gt;Auth logic is surprisingly easy to mess up&lt;/p&gt;

&lt;p&gt;We should not be writing it ourselves!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java:3&#34;&gt;public class SessionInterceptor extends ... {
    public boolean preHandle(...) {
        return someCustomAuthCode(...);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;good-practice&#34;&gt;Good Practice&lt;/h2&gt;

&lt;p&gt;Spring Security is a widely used (and tested) auth framework&lt;/p&gt;

&lt;p&gt;Define your auth logic declaratively&lt;/p&gt;

&lt;p&gt;Require auth by default&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;compile &#39;org.springframework.security:spring-security-web:4&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;protected void configure(HttpSecurity http) throws Exception {
	http.authorizeRequests()
		.antMatchers(&amp;quot;/resources/**&amp;quot;, &amp;quot;/signup&amp;quot;).permitAll()
		.antMatchers(&amp;quot;/admin/**&amp;quot;).hasRole(&amp;quot;ADMIN&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>